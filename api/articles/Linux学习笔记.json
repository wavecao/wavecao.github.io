{"title":"Linux学习笔记——一篇入门Linux","uid":"81b01b0fe0649b3c1227863a4d704276","slug":"Linux学习笔记","date":"2020-08-20T01:47:00.000Z","updated":"2020-08-20T00:57:14.000Z","comments":true,"path":"api/articles/Linux学习笔记.json","keywords":null,"cover":"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1597895038826&di=423dbc0befbefd0d55195ee12e7ff13e&imgtype=0&src=http%3A%2F%2Fimg.cnitedu.cn%2Fuploads%2Fallimg%2F1910%2Fwsh1012002.jpg","content":"<h1 id=\"Linux学习笔记\"><a href=\"#Linux学习笔记\" class=\"headerlink\" title=\"Linux学习笔记\"></a>Linux学习笔记</h1><h2 id=\"1-Linux简介\"><a href=\"#1-Linux简介\" class=\"headerlink\" title=\"1. Linux简介\"></a>1. Linux简介</h2><h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>Linux 内核最初只是由芬兰人林纳斯·托瓦兹（Linus Torvalds）在赫尔辛基大学上学时出于个人爱好而编写的。</p>\n<p>Linux 是一套免费使用和自由传播的类 Unix 操作系统，是一个基于 POSIX 和 UNIX 的多用户、多任务、支持多线程和多 CPU 的操作系统。</p>\n<p>Linux 能运行主要的 UNIX 工具软件、应用程序和网络协议。它支持 32 位和 64 位硬件。Linux 继承了 Unix 以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。</p>\n<h3 id=\"发行版\"><a href=\"#发行版\" class=\"headerlink\" title=\"发行版\"></a>发行版</h3><p>Linux 的发行版说简单点就是将 Linux 内核与应用软件做一个打包。</p>\n<p><img src=\"https://www.runoob.com/wp-content/uploads/2014/06/1511849829609658.jpg\"></p>\n<p>目前市面上较知名的发行版有：Ubuntu、RedHat、CentOS、Debian、Fedora、SuSE、OpenSUSE、Arch Linux、SolusOS 等。</p>\n<p><img src=\"https://www.runoob.com/wp-content/uploads/2014/06/wKioL1bvVPWAu7hqAAEyirVUn3c446.jpg-wh_651x-s_3197843091.jpg\"></p>\n<h3 id=\"Linux和Windows的对比\"><a href=\"#Linux和Windows的对比\" class=\"headerlink\" title=\"Linux和Windows的对比\"></a>Linux和Windows的对比</h3><p><img src=\"http://image.cheerway.fun/blog/20200815/giVAdhuIKUYP.png?imageslim\" alt=\"mark\"></p>\n<h2 id=\"2-Linux的目录结构\"><a href=\"#2-Linux的目录结构\" class=\"headerlink\" title=\"2. Linux的目录结构\"></a>2. Linux的目录结构</h2><p>登录系统后，在终端输入：</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">ls &#x2F;</code></pre>\n\n<p>你会看到以下图示：</p>\n<p><img src=\"http://image.cheerway.fun/blog/20200815/YLzx0qL84qOd.png?imageslim\" alt=\"mark\"></p>\n<p>树状目录结构为：</p>\n<p><img src=\"https://www.runoob.com/wp-content/uploads/2014/06/003vPl7Rty6E8kZRlAEdc690.jpg\"></p>\n<p>有关目录的解释：</p>\n<ul>\n<li><p>/bin：</p>\n<p>bin是Binary的缩写，/bin 放置的是在单人维护模式下还能够被操作的指令。在/bin底下的指令可以被root与一般账号所使用，主要有：cat, chmod, chown, date, mv, mkdir, cp, bash 等等常用的指令。</p>\n</li>\n<li><p>/boot：</p>\n<p>这里存放的是启动Linux时使用的一些核心文件，包括一些连接文件以及镜像文件。</p>\n</li>\n<li><p>/dev：</p>\n<p>dev是Device(设备)的缩写, 该目录下存放的是Linux的外部设备，在Linux中访问设备的方式和访问文件的方式是相同的。因为Linux中一切皆文件！</p>\n</li>\n<li><p>/etc：</p>\n<p>这个目录用来存放所有的系统管理所需要的配置文件和子目录。例如人员的账号密码文件、 各种服务的启始档等等。一般来说，这个目录下的各文件属性是可以让一般使用者查阅的， 但是只有 root 有权力修改。</p>\n</li>\n<li><p>/home：</p>\n<p>用户的主目录，在Linux中，每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的，比如在我的系统中只有<code>cheerway</code>这一个用户。</p>\n<ul>\n<li>~：代表目前这个用户的目录</li>\n</ul>\n<p><img src=\"http://image.cheerway.fun/blog/20200815/z4SiQsaiByHB.png?imageslim\" alt=\"mark\"></p>\n</li>\n<li><p>/lib：</p>\n<p>这个目录存放着系统最基本的动态链接共享库，其作用类似于Windows中的DLL文件。几乎所有的应用程序都要使用到这些共享库。</p>\n</li>\n<li><p>/lost+found：</p>\n<p>这个目录一般是空的，当系统非法关机以后，这里就存了一些文件。也就是说当文件系统发生错误时，这里就遗留了一些片段。</p>\n</li>\n<li><p>/media：</p>\n<p>linux 系统会自动识别一些设备，例如U盘、光驱等等，当识别后，linux会把识别的设备挂载到这个目录下。</p>\n</li>\n<li><p>/mnt：</p>\n<p>系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将光驱挂载在/mnt/上，然后进入该目录就可以查看光驱里的内容了</p>\n</li>\n<li><p>/opt：</p>\n<p>这是给主机额外安装软件所摆放的目录。比如你安装一个ORACLE数据库则就可以放到这个目录下。默认是空的。不过有的人喜欢把软件放在<code>usr/local</code>。这个因人而异吧。</p>\n</li>\n<li><p>/proc：</p>\n<p><strong>这个目录本身是一个虚拟文件系统(virtual filesystem)！</strong>他放置的数据都是在内存当中， 例如系统核心、进程信息(process)、周边装置的状态及网络状态等等。因为这个目录下的数据都是在内存当中， 所以本身不占任何硬盘空间啊！比较重要的文件例如：/proc/cpuinfo, /proc/dma, /proc/interrupts, /proc/ioports, /proc/net/等等。</p>\n<p>这个目录的内容不在硬盘上而是在内存里，我们也可以直接修改里面的某些文件，比如可以通过下面的命令来屏蔽主机的ping命令，使别人无法ping你的机器：</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">echo 1 &gt; &#x2F;proc&#x2F;sys&#x2F;net&#x2F;ipv4&#x2F;icmp_echo_ignore_all</code></pre>\n\n<p>进入该目录下，输入如下命令可以一窥cpuinfo文件的内容，但是具体内容我也看不懂/(ㄒoㄒ)/~~：</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">cat cpuinfo</code></pre>\n\n<p><img src=\"http://image.cheerway.fun/blog/20200815/H9L65HkxLeOi.png?imageslim\" alt=\"mark\"></p>\n</li>\n<li><p>/root：</p>\n<p>该目录为系统管理员，也称作超级权限者的用户主目录。</p>\n</li>\n<li><p>/sbin：</p>\n<p>s就是Super User的意思，这里存放的是系统管理员使用的系统管理程序。放在/sbin 底下的为开机过程中所需要的，里面包括了开机、修复、还原系统所需要的指令。 至于某些服务器软件程序，一般则放置到/usr/sbin/当中。至于本机自行安装的软件所产生的系统执行文件(system binary)，则放置到/usr/local/sbin/当中了。常见的指令包括：fdisk, fsck, ifconfig, mkfs 等等。</p>\n</li>\n<li><p>/selinux：</p>\n<p>这个目录是Redhat和CentO S所特有的目录，Selinux是一个安全机制，类似于Windows的防火墙，但是这套机制比较复杂，而这个目录就是用来存放Selinux相关的文件的。</p>\n</li>\n<li><p>/srv：</p>\n<p>该目录存放一些服务启动之后需要提取的数据。</p>\n</li>\n<li><p>/sys：</p>\n<p>这是linux2.6内核的一个很大的变化。该目录下安装了2.6内核中新出现的一个文件系统 sysfs 。</p>\n<p>sysfs文件系统集成了下面3种文件系统的信息：针对<strong>进程信息的proc文件系统</strong>、<strong>针对设备的devfs文件系统</strong>以及<strong>针对伪终端的devpts文件系统</strong>。</p>\n<p>该文件系统是内核设备树的一个直观反映。</p>\n<p>当一个内核对象被创建的时候，对应的文件和目录也在内核对象子系统中被创建。</p>\n</li>\n<li><p>/tmp：<br>这个目录是用来存放一些临时文件的。</p>\n</li>\n<li><p>/usr：<br> 这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于windows下的program files目录。</p>\n</li>\n<li><p>/usr/bin：<br>系统用户使用的应用程序。</p>\n</li>\n<li><p>/usr/sbin：<br>超级用户使用的比较高级的管理程序和系统守护程序。</p>\n</li>\n<li><p>/usr/src：<br>内核源代码默认的放置目录。</p>\n</li>\n<li><p>/var：<br>这个目录中存放着在不断扩充着的东西，我们习惯将那些经常被修改的目录放在这个目录下。包括各种日志文件。</p>\n</li>\n<li><p>/run：<br>是一个临时文件系统，存储系统启动以来的信息。当系统重启时，这个目录下的文件应该被删掉或清除。如果你的系统上有 /var/run 目录，应该让它指向 run。</p>\n</li>\n</ul>\n<p>在 Linux 系统中，有几个目录是比较重要的，平时需要注意不要误删除或者随意更改内部文件。</p>\n<ul>\n<li><p>/etc： 上边也提到了，这个是系统中的配置文件，如果你更改了该目录下的某个文件可能会导致系统不能启动。</p>\n</li>\n<li><p>/bin, /sbin, /usr/bin, /usr/sbin: 这是系统预设的执行文件的放置目录，比如 ls 就是在/bin/ls 目录下的。</p>\n<p>值得提出的是，/bin, /usr/bin 是给系统用户使用的指令（除root外的通用户），而/sbin, /usr/sbin 则是给root使用的指令。</p>\n</li>\n<li><p>/var： 这是一个非常重要的目录，系统上跑了很多程序，那么每个程序都会有相应的日志产生，而这些日志就被记录到这个目录下，具体在/var/log 目录下，另外mail的预设放置也是在这里。</p>\n</li>\n</ul>\n<h2 id=\"3-Linux文件基本属性\"><a href=\"#3-Linux文件基本属性\" class=\"headerlink\" title=\"3. Linux文件基本属性\"></a>3. Linux文件基本属性</h2><h3 id=\"基本属性\"><a href=\"#基本属性\" class=\"headerlink\" title=\"基本属性\"></a>基本属性</h3><p>Linux系统是一个典型的多用户系统，不同的用户有不同的地位，拥有不同的权限。为了保护系统的安全性，Linux系统对不同的用户访问同一文件的权限做了不同的规定。</p>\n<p>可以使用<code>ls -l</code>或者<code>ll</code>命令查看一个文件的属性以及文件所属的用户和组，比如：</p>\n<p><img src=\"http://image.cheerway.fun/blog/20200818/gJ3KrnzjSFBq.png?imageslim\" alt=\"mark\"></p>\n<p>实例中，<strong>boot</strong>文件的第一个属性用”d”表示。”d”在Linux中代表该文件是一个目录文件。</p>\n<p>在Linux中第一个字符代表这个文件是目录、文件或链接文件等等。</p>\n<ul>\n<li>当为[ <strong>d</strong> ]则是目录</li>\n<li>当为[ <strong>-</strong> ]则是文件；</li>\n<li>若是[ <strong>l</strong> ]则表示为链接文档(link file)；</li>\n<li>若是[ <strong>b</strong> ]则表示为装置文件里面的可供储存的接口设备(可随机存取装置)；</li>\n<li>若是[ <strong>c</strong> ]则表示为装置文件里面的串行端口设备，例如键盘、鼠标(一次性读取装置)。</li>\n</ul>\n<p>接下来的字符中，以三个为一组，且均为『rwx』 的三个参数的组合。其中，[ r ]代表可读(read)、[ w ]代表可写(write)、[ x ]代表可执行(execute)。 要注意的是，这三个权限的位置不会改变，如果没有权限，就会出现减号[ - ]而已。</p>\n<p>每个文件的属性由左边第一部分的10个字符来确定（如下图）:</p>\n<p><img src=\"https://www.runoob.com/wp-content/uploads/2014/06/363003_1227493859FdXT.png\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>对于文件来说，它都有一个特定的所有者，也就是对该文件具有所有权的用户。</p>\n<p>同时，在Linux系统中，用户是按组分类的，一个用户属于一个或多个组。</p>\n<p>文件所有者以外的用户又可以分为文件所有者的同组用户和其他用户。</p>\n<p>因此，Linux系统按文件所有者、文件所有者同组用户和其他用户来规定了不同的文件访问权限。</p>\n<p>对于 root 用户来说，一般情况下，文件的权限对其不起作用。</p></blockquote>\n<h3 id=\"更改文件属性\"><a href=\"#更改文件属性\" class=\"headerlink\" title=\"更改文件属性\"></a>更改文件属性</h3><ol>\n<li><p>chgrp：更改文件属组</p>\n<p>语法：</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">chgrp [-R] 属性组 文件名</code></pre>\n\n<p>参数选项：</p>\n<ul>\n<li>-R：递归更改文件属组，就是在更改某个目录文件的属组时，如果加上-R的参数，那么该目录下的所有文件的属组都会更改。</li>\n</ul>\n</li>\n<li><p>chown：更改文件属主，也可以同时更改其属组</p>\n<p>语法：</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">chown [-R] 属主名 文件名\nchown [-R] 属主名：属组名 文件名</code></pre>\n\n<p><strong>举例：</strong>进入 /root 目录（~）将install.log的拥有者改为bin这个账号：</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">[root@www ~] cd ~\n[root@www ~]# chown bin install.log\n[root@www ~]# ls -l\n-rw-r--r--  1 bin  users 68495 Jun 25 08:53 install.log</code></pre>\n\n<p>将install.log的拥有者与群组改回为root：</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">[root@www ~]# chown root:root install.log\n[root@www ~]# ls -l\n-rw-r--r--  1 root root 68495 Jun 25 08:53 install.log</code></pre></li>\n<li><p>chmod：更改文件9个属性</p>\n<p>Linux文件属性有两种设置方法，一种是数字，一种是符号。</p>\n<p>Linux文件的基本权限就有九个，分别是owner/group/others三种身份各有自己的read/write/execute权限。</p>\n<p>先复习一下刚刚上面提到的数据：文件的权限字符为：『-rwxrwxrwx』， 这九个权限是三个三个一组的！其中，我们可以使用数字来代表各个权限，各权限的分数对照表如下：</p>\n<ul>\n<li>r:4</li>\n<li>w:2</li>\n<li>x:1</li>\n</ul>\n<p>每种身份(owner/group/others)各自的三个权限(r/w/x)分数是需要累加的，例如当权限为： [-rwxrwx—] 分数则是：</p>\n<ul>\n<li>owner = rwx = 4+2+1 = 7</li>\n<li>group = rwx = 4+2+1 = 7</li>\n<li>others= — = 0+0+0 = 0</li>\n</ul>\n<p>所以等一下我们设定权限的变更时，该文件的权限数字就是770啦！变更权限的指令chmod的语法是这样的：</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">chmod [-R] xyz 文件名或目录</code></pre>\n\n<p>选项与参数：</p>\n<ul>\n<li>xyz：分别代表三个数字，为rwx属性值的相加</li>\n<li>-R：进行递归(recursive)的持续变更，亦即连同次目录下的所有文件都会变更</li>\n</ul>\n<p>举例来说，如果要将一个文件的权限更改为 <code>-rwxr-xr--</code> 的话，那么权限的分数就是：</p>\n<p>[4+2+1] [4+0+1] [4+0+0] = 754。</p>\n<p><strong>符号类型改变文件权限</strong></p>\n<p>还有一个改变权限的方法，从之前的介绍中我们可以发现，基本上就九个权限分别是：</p>\n<ul>\n<li>(1)user</li>\n<li>(2)group</li>\n<li>(3)others</li>\n</ul>\n<p>那么我们就可以使用 <strong>u, g, o</strong> 来代表三种身份的权限！</p>\n<p>此外， <strong>a</strong> 则代表 <strong>all</strong>，即全部的身份。读写的权限可以写成 <strong>r, w, x</strong>，也就是可以使用下表的方式来看：</p>\n<table>\n<thead>\n<tr>\n<th>chmod</th>\n<th>u</th>\n<th>+ 加入</th>\n<th>r</th>\n<th>文件名/目录</th>\n</tr>\n</thead>\n<tbody><tr>\n<td></td>\n<td>g</td>\n<td>- 除去</td>\n<td>w</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>o</td>\n<td>= 设定</td>\n<td>x</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>a</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<p>如果我们需要将文件权限设置为 <strong>-rwxr-xr–</strong> ，可以使用 <strong>chmod u=rwx,g=rx,o=r 文件名</strong> 来设定：</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">#  touch test1    &#x2F;&#x2F; 创建 test1 文件\n# ls -al test1    &#x2F;&#x2F; 查看 test1 默认权限\n-rw-r--r-- 1 root root 0 Nov 15 10:32 test1\n# chmod u&#x3D;rwx,g&#x3D;rx,o&#x3D;r  test1    &#x2F;&#x2F; 修改 test1 权限\n# ls -al test1\n-rwxr-xr-- 1 root root 0 Nov 15 10:32 test1</code></pre>\n\n<p>而如果是要将权限去掉而不改变其他已存在的权限呢？例如要拿掉全部人的可执行权限，则：</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">#  chmod  a-x test1\n# ls -al test1\n-rw-r--r-- 1 root root 0 Nov 15 10:32 test1</code></pre></li>\n</ol>\n<h2 id=\"4-Linux文件与目录管理\"><a href=\"#4-Linux文件与目录管理\" class=\"headerlink\" title=\"4. Linux文件与目录管理\"></a>4. Linux文件与目录管理</h2><p>Linux的目录结构为树状结构，最顶级的目录为根目录 /。</p>\n<p>其他目录通过挂载可以将它们添加到树中，通过解除挂载可以移除它们。</p>\n<p>在开始本教程前我们需要先知道什么是绝对路径与相对路径。</p>\n<ul>\n<li><strong>绝对路径：</strong><br>路径的写法，由根目录 / 写起，例如： /usr/share/doc 这个目录。</li>\n<li><strong>相对路径：</strong><br>路径的写法，不是由 / 写起，例如由 /usr/share/doc 要到 /usr/share/man 底下时，可以写成： cd ../man 这就是相对路径的写法啦！</li>\n</ul>\n<h3 id=\"处理文件的常用指令\"><a href=\"#处理文件的常用指令\" class=\"headerlink\" title=\"处理文件的常用指令\"></a>处理文件的常用指令</h3><ul>\n<li>ls: 列出目录及文件名</li>\n<li>cd：切换目录</li>\n<li>pwd：显示目前的目录</li>\n<li>mkdir：创建一个新的目录</li>\n<li>rmdir：删除一个空的目录</li>\n<li>cp: 复制文件或目录</li>\n<li>rm: 移除文件或目录</li>\n<li>mv: 移动文件与目录，或修改文件与目录的名称</li>\n</ul>\n<p>可以使用 <em>man [命令]</em> 来查看各个命令的使用文档，如 ：man cp。</p>\n<h4 id=\"ls：列出目录\"><a href=\"#ls：列出目录\" class=\"headerlink\" title=\"ls：列出目录\"></a>ls：列出目录</h4><p>语法：</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">[root@www ~]# ls [-aAdfFhilnrRSt] 目录名称\n[root@www ~]# ls [--color&#x3D;&#123;never,auto,always&#125;] 目录名称\n[root@www ~]# ls [--full-time] 目录名称</code></pre>\n\n<p>选项与参数：</p>\n<ul>\n<li>-a ：全部的文件，连同隐藏文件( 开头为 . 的文件) 一起列出来(常用)</li>\n<li>-d ：仅列出目录本身，而不是列出目录内的文件数据(常用)</li>\n<li>-l ：长数据串列出，包含文件的属性与权限等等数据；(常用)</li>\n</ul>\n<p><img src=\"http://image.cheerway.fun/blog/20200818/kRolwELXW3zS.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"cd：切换目录\"><a href=\"#cd：切换目录\" class=\"headerlink\" title=\"cd：切换目录\"></a>cd：切换目录</h4><p>cd是Change Directory的缩写，这是用来变换工作目录的命令。</p>\n<p>语法：</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">cd [相对路径或绝对路径]</code></pre>\n\n<h4 id=\"pwd-：显示目前所在的目录\"><a href=\"#pwd-：显示目前所在的目录\" class=\"headerlink\" title=\"pwd ：显示目前所在的目录\"></a>pwd ：显示目前所在的目录</h4><p>pwd 是 <strong>Print Working Directory</strong> 的缩写，也就是显示目前所在目录的命令。</p>\n<p>语法：</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">pwd [-P]</code></pre>\n\n<p>选项与参数：</p>\n<ul>\n<li><strong>-P</strong> ：显示出确实的路径，而非使用连结 (link) 路径。</li>\n</ul>\n<p>实例：单纯显示出目前的工作目录：</p>\n<p><img src=\"http://image.cheerway.fun/blog/20200818/3JhGzIFyfXRy.png?imageslim\" alt=\"mark\"></p>\n<p>上图就直接显示了目录本身，下面是一个带参数的实例：</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">[root@www ~]# cd &#x2F;var&#x2F;mail   &lt;&#x3D;&#x3D;注意，&#x2F;var&#x2F;mail是一个连结档\n[root@www mail]# pwd\n&#x2F;var&#x2F;mail         &lt;&#x3D;&#x3D;列出目前的工作目录\n[root@www mail]# pwd -P\n&#x2F;var&#x2F;spool&#x2F;mail   &lt;&#x3D;&#x3D;怎么回事？有没有加 -P 差很多～\n[root@www mail]# ls -ld &#x2F;var&#x2F;mail\nlrwxrwxrwx 1 root root 10 Sep  4 17:54 &#x2F;var&#x2F;mail -&gt; spool&#x2F;mail\n# 看到这里应该知道为啥了吧？因为 &#x2F;var&#x2F;mail 是连结档，连结到 &#x2F;var&#x2F;spool&#x2F;mail \n# 所以，加上 pwd -P 的选项后，会不以连结档的数据显示，而是显示正确的完整路径啊！</code></pre>\n\n<h4 id=\"mkdir：创建目录\"><a href=\"#mkdir：创建目录\" class=\"headerlink\" title=\"mkdir：创建目录\"></a>mkdir：创建目录</h4><p>语法：</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">mkdir [-mp] 目录名称</code></pre>\n\n<p>选项与参数：</p>\n<ul>\n<li>-m ：配置文件的权限喔！直接配置，不需要看默认权限 (umask) 的脸色～</li>\n<li>-p ：帮助你直接将所需要的目录(包含上一级目录)递归创建起来！</li>\n</ul>\n<p>实例：</p>\n<p><img src=\"http://image.cheerway.fun/blog/20200818/K6hc4iKcRlP2.png?imageslim\" alt=\"mark\"></p>\n<p><strong>加了 -p 的选项，可以自行帮你创建多层目录</strong></p>\n<p>也可以在创建目录的时候指定权限，创建权限为 <strong>rwx–x–x</strong> 的目录：</p>\n<p><img src=\"http://image.cheerway.fun/blog/20200818/6zy7jVKpC90A.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"rmdir：删除空的目录\"><a href=\"#rmdir：删除空的目录\" class=\"headerlink\" title=\"rmdir：删除空的目录\"></a>rmdir：删除空的目录</h4><p>语法：</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">rmdir [-p] 目录名称</code></pre>\n\n<p>选项与参数：</p>\n<ul>\n<li><strong>-p ：</strong>连同上一级『空的』目录也一起删除</li>\n</ul>\n<p>不过要注意的是，这个 rmdir 仅能删除空的目录，你可以使用 rm 命令来删除非空目录。</p>\n<h4 id=\"cp：复制文件或者目录\"><a href=\"#cp：复制文件或者目录\" class=\"headerlink\" title=\"cp：复制文件或者目录\"></a>cp：复制文件或者目录</h4><p>语法:</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">cp [-adfilprsu] 来源档(source) 目标档(destination)\ncp [options] source1 source2 source3 .... directory</code></pre>\n\n<p>选项与参数：</p>\n<ul>\n<li><strong>-a：</strong>相当於 -pdr 的意思，至於 pdr 请参考下列说明；(常用)</li>\n<li><strong>-d：</strong>若来源档为连结档的属性(link file)，则复制连结档属性而非文件本身；</li>\n<li><strong>-f：</strong>为强制(force)的意思，若目标文件已经存在且无法开启，则移除后再尝试一次；</li>\n<li><strong>-i：</strong>若目标档(destination)已经存在时，在覆盖时会先询问动作的进行(常用)</li>\n<li><strong>-l：</strong>进行硬式连结(hard link)的连结档创建，而非复制文件本身；</li>\n<li><strong>-p：</strong>连同文件的属性一起复制过去，而非使用默认属性(备份常用)；</li>\n<li><strong>-r：</strong>递归持续复制，用於目录的复制行为；(常用)</li>\n<li><strong>-s：</strong>复制成为符号连结档 (symbolic link)，亦即『捷径』文件；</li>\n<li><strong>-u：</strong>若 destination 比 source 旧才升级 destination ！</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>值得一提的是，在修改任何重要的文件之前利用cp进行备份是非常必要的</p></blockquote>\n<h4 id=\"rm：删除文件或者目录\"><a href=\"#rm：删除文件或者目录\" class=\"headerlink\" title=\"rm：删除文件或者目录\"></a>rm：删除文件或者目录</h4><p>:slightly_smiling_face:终于迎来了删库跑路用的命令！</p>\n<p>语法：</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">rm [-fir] 文件或者目录</code></pre>\n\n<p>选项与参数：</p>\n<ul>\n<li>-f ：就是 force 的意思，忽略不存在的文件，不会出现警告信息；</li>\n<li>-i ：互动模式，在删除前会询问使用者是否动作</li>\n<li>-r ：递归删除啊！最常用在目录的删除了！这是非常危险的选项！！！</li>\n</ul>\n<p>如果你想强制递归删除某个东西，比如你公司的数据库文件，可以使用：</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">rm -rf 数据库文件夹</code></pre>\n\n<p>做完这一步操作，恭喜你可以跳槽加薪了！</p>\n<h4 id=\"mv：移动文件与目录或者修改名称\"><a href=\"#mv：移动文件与目录或者修改名称\" class=\"headerlink\" title=\"mv：移动文件与目录或者修改名称\"></a>mv：移动文件与目录或者修改名称</h4><p>语法：</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">mv [-fiu] source destination\nmv [options] source1 source2 source3 .... directory</code></pre>\n\n<p>选项与参数：</p>\n<ul>\n<li>-f ：force 强制的意思，如果目标文件已经存在，不会询问而直接覆盖；</li>\n<li>-i ：若目标文件 (destination) 已经存在时，就会询问是否覆盖！</li>\n<li>-u ：若目标文件已经存在，且 source 比较新，才会升级 (update)</li>\n</ul>\n<h3 id=\"Linux文件内容查看\"><a href=\"#Linux文件内容查看\" class=\"headerlink\" title=\"Linux文件内容查看\"></a>Linux文件内容查看</h3><p>Linux系统中使用以下命令来查看文件的内容：</p>\n<ul>\n<li>cat 由第一行开始显示文件内容</li>\n<li>tac 从最后一行开始显示，可以看出 tac 是 cat 的倒着写！</li>\n<li>nl  显示的时候，顺道输出行号！</li>\n<li>more 一页一页的显示文件内容</li>\n<li>less 与 more 类似，但是比 more 更好的是，他可以往前翻页！</li>\n<li>head 只看头几行</li>\n<li>tail 只看尾巴几行</li>\n</ul>\n<h4 id=\"cat：由第一行开始显示文件内容\"><a href=\"#cat：由第一行开始显示文件内容\" class=\"headerlink\" title=\"cat：由第一行开始显示文件内容\"></a>cat：由第一行开始显示文件内容</h4><p>语法：</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">cat [-AbEnTv]</code></pre>\n\n<p>选项与参数：</p>\n<ul>\n<li>-A ：相当於 -vET 的整合选项，可列出一些特殊字符而不是空白而已；</li>\n<li>-b ：列出行号，仅针对非空白行做行号显示，空白行不标行号！</li>\n<li>-E ：将结尾的断行字节 $ 显示出来；</li>\n<li>-n ：列印出行号，连同空白行也会有行号，与 -b 的选项不同；</li>\n<li>-T ：将 [tab] 按键以 ^I 显示出来；</li>\n<li>-v ：列出一些看不出来的特殊字符</li>\n</ul>\n<p>实例：</p>\n<p><img src=\"http://image.cheerway.fun/blog/20200818/D7CoGzdNbpxe.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"tac：从最后一行开始查看\"><a href=\"#tac：从最后一行开始查看\" class=\"headerlink\" title=\"tac：从最后一行开始查看\"></a>tac：从最后一行开始查看</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>如果你仔细看的话，会发现tac其实是cat反过来，他们表达的意思也是相反的</p></blockquote>\n<p>示例：</p>\n<p><img src=\"http://image.cheerway.fun/blog/20200818/omG71DkiBiN7.png?imageslim\" alt=\"mark\"></p>\n<p>确实是倒过来了，很迷惑这个命令的作用是什么？:confused:</p>\n<h4 id=\"nl：显示行号\"><a href=\"#nl：显示行号\" class=\"headerlink\" title=\"nl：显示行号\"></a>nl：显示行号</h4><p>语法：</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">nl [-bnw] 文件</code></pre>\n\n<p>选项与参数：</p>\n<ul>\n<li>-b ：指定行号指定的方式，主要有两种：<br>-b a ：表示不论是否为空行，也同样列出行号(类似 cat -n)；<br>-b t ：如果有空行，空的那一行不要列出行号(默认值)；</li>\n<li>-n ：列出行号表示的方法，主要有三种：<br>-n ln ：行号在荧幕的最左方显示；<br>-n rn ：行号在自己栏位的最右方显示，且不加 0 ；<br>-n rz ：行号在自己栏位的最右方显示，且加 0 ；</li>\n<li>-w ：行号栏位的占用的位数。</li>\n</ul>\n<p>示例：</p>\n<p><img src=\"http://image.cheerway.fun/blog/20200818/xuK72RSWHUAx.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"more：一页一页翻动\"><a href=\"#more：一页一页翻动\" class=\"headerlink\" title=\"more：一页一页翻动\"></a>more：一页一页翻动</h4><p>示例：</p>\n<p><img src=\"http://image.cheerway.fun/blog/20200818/zXFHdrJy8hT4.png?imageslim\" alt=\"mark\"></p>\n<p>在 more 这个程序的运行过程中，你有几个按键可以按的：</p>\n<ul>\n<li>空白键 (space)：代表向下翻一页；</li>\n<li>Enter     ：代表向下翻『一行』；</li>\n<li>/字串     ：代表在这个显示的内容当中，向下搜寻『字串』这个关键字；</li>\n<li>:f      ：立刻显示出档名以及目前显示的行数；</li>\n<li>q       ：代表立刻离开 more ，不再显示该文件内容。</li>\n<li>b 或 [ctrl]-b ：代表往回翻页，不过这动作只对文件有用，对管线无用。</li>\n</ul>\n<p><strong>高级用法：</strong></p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">more +3 test.log  #从第三行开始显示\nmore -4 test.log  #每屏显示四行内容\nmore +&#x2F;java test.log  #从第一个java关键字处前两行开始显示</code></pre>\n\n\n\n<h4 id=\"less：一页一页翻动\"><a href=\"#less：一页一页翻动\" class=\"headerlink\" title=\"less：一页一页翻动\"></a>less：一页一页翻动</h4><p>less 工具也是对文件或其它输出进行分页显示的工具，应该说是linux正统查看文件内容的工具，功能极其强大。less 的用法比起 more 更加的有弹性。在 less 里头可以拥有更多的搜索功能，不止可以向下搜，也可以向上搜。</p>\n<p>less运行时可以输入的命令有：</p>\n<ul>\n<li>空白键  ：向下翻动一页；</li>\n<li>[pagedown]：向下翻动一页；</li>\n<li>[pageup] ：向上翻动一页；</li>\n<li>/字串   ：向下搜寻『字串』的功能；</li>\n<li>?字串   ：向上搜寻『字串』的功能；</li>\n<li>n     ：重复前一个搜寻 (与 / 或 ? 有关！)</li>\n<li>N     ：反向的重复前一个搜寻 (与 / 或 ? 有关！)</li>\n<li>q     ：离开 less 这个程序；</li>\n</ul>\n<h4 id=\"head：取出文件内容的开头部分\"><a href=\"#head：取出文件内容的开头部分\" class=\"headerlink\" title=\"head：取出文件内容的开头部分\"></a>head：取出文件内容的开头部分</h4><p>语法：</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">head [-n number] 文件名</code></pre>\n\n<p>示例：</p>\n<p><img src=\"http://image.cheerway.fun/blog/20200818/66WShYkfzej1.png?imageslim\" alt=\"mark\"></p>\n<p>选项与参数：</p>\n<ul>\n<li>-n ：后面接数字，代表显示几行的意思</li>\n</ul>\n<p><strong>默认显示前十行</strong></p>\n<h4 id=\"tail：取出文件末尾的内容\"><a href=\"#tail：取出文件末尾的内容\" class=\"headerlink\" title=\"tail：取出文件末尾的内容\"></a>tail：取出文件末尾的内容</h4><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">tail [-n number] 文件名</code></pre>\n\n<p>示例：</p>\n<p><img src=\"http://image.cheerway.fun/blog/20200818/8z9admTPBy2D.png?imageslim\" alt=\"mark\"></p>\n<p>选项与参数：</p>\n<ul>\n<li>-n ：后面接数字，代表显示几行的意思</li>\n<li>-f ：表示持续侦测后面所接的档名，要等到按下[ctrl]-c才会结束tail的侦测</li>\n</ul>\n<h4 id=\"gt-指令和-gt-gt-指令\"><a href=\"#gt-指令和-gt-gt-指令\" class=\"headerlink\" title=\"&gt;指令和&gt;&gt;指令\"></a>&gt;指令和&gt;&gt;指令</h4><p><code>&gt;</code> 输出重定向：会将原来的文件内容覆盖</p>\n<p><code>&gt;&gt;</code> 追加，不会覆盖原来的内容，而是追加在文件尾部</p>\n<p>示例：</p>\n<p><img src=\"http://image.cheerway.fun/blog/20200819/UtjBLVwIwANc.png?imageslim\" alt=\"mark\"></p>\n<p>再次使用<code>ls -l &gt; a.txt</code> ，这次不加-a参数：</p>\n<p><img src=\"http://image.cheerway.fun/blog/20200819/sbSlIrKK3rxa.png?imageslim\" alt=\"mark\"></p>\n<p>再次输入<code>ls -al &gt;&gt; a.txt</code>：</p>\n<p><img src=\"http://image.cheerway.fun/blog/20200819/ijanVy8T42Rt.png?imageslim\" alt=\"mark\"></p>\n<p>示例：将文件1的内容覆盖到文件2</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">cat 文件1 &gt; 文件2</code></pre>\n\n<h4 id=\"echo指令\"><a href=\"#echo指令\" class=\"headerlink\" title=\"echo指令\"></a>echo指令</h4><p>语法：</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">echo [options] 输出的内容</code></pre>\n\n<p>示例：使用echo指令输出环境变量</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">echo $PATH</code></pre>\n\n<p><img src=\"http://image.cheerway.fun/blog/20200819/Iv0Pgy3Co4ez.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"history指令\"><a href=\"#history指令\" class=\"headerlink\" title=\"history指令\"></a>history指令</h4><p>查看已经执行过的历史命令，也可以执行历史命令</p>\n<p>语法：</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">history n</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>n表示要显示的个数</p></blockquote>\n<p>示例：最近使用的全部指令</p>\n<p><img src=\"http://image.cheerway.fun/blog/20200819/eEqIdERS9sNo.png?imageslim\" alt=\"mark\"></p>\n<p>示例：最近使用的五条指令</p>\n<p><img src=\"http://image.cheerway.fun/blog/20200819/CFUTBYHpAqBO.png?imageslim\" alt=\"mark\"></p>\n<p>示例：执行标号为17的指令</p>\n<p><img src=\"http://image.cheerway.fun/blog/20200819/uKp2CDO9o9oM.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"find指令\"><a href=\"#find指令\" class=\"headerlink\" title=\"find指令\"></a>find指令</h4><p>find指令将从指定目录向下递归地遍历其各个子目录，将满足条件地文件或者目录显示在终端。</p>\n<p>语法：</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">find 搜索范围 [选项]</code></pre>\n\n<p>选项说明：</p>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>-name&lt;查询方式&gt;</td>\n<td>按照指定的文件名查找模式查找文件</td>\n</tr>\n<tr>\n<td>-user&lt;用户名&gt;</td>\n<td>查找属于指定用户名的所有文件</td>\n</tr>\n<tr>\n<td>-size&lt;文件大小&gt;</td>\n<td>按照指定的文件大小查找文件</td>\n</tr>\n</tbody></table>\n<p>示例：根据文件名查找文件</p>\n<p><img src=\"http://image.cheerway.fun/blog/20200819/H3w2tGcFzv3P.png?imageslim\" alt=\"mark\"></p>\n<p>根据拥有者查找文件</p>\n<p><img src=\"http://image.cheerway.fun/blog/20200819/0OjQT0vBJWCv.png?imageslim\" alt=\"mark\"></p>\n<p>查找整个Linux系统中大于20M的文件（+n 大于，-n小于，n等于）</p>\n<p><img src=\"http://image.cheerway.fun/blog/20200819/CSSrvEQi1cz4.png?imageslim\" alt=\"mark\"></p>\n<p>查找所有的<code>.txt</code>文件</p>\n<p><img src=\"http://image.cheerway.fun/blog/20200819/2tsoUBIEurJ4.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"locate指令\"><a href=\"#locate指令\" class=\"headerlink\" title=\"locate指令\"></a>locate指令</h4><p>locate 可以快速定位文件路径。locate指令利用事先建立好的系统中所有文件名称及其路径的locate数据库实现快速定位给定的文件。</p>\n<p>locate无需遍历整个文件系统，所以速度非常快，为了保证查询结果的精确性，管理员必须定期更新locate数据库</p>\n<p>语法：</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">locate 文件名</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>由于locate指令基于数据库进行查询，所以第一次运行前，必需使用updatedb指令创建数据库</p></blockquote>\n<p>示例：使用locate快速定位a.txt文件所在的目录</p>\n<p><img src=\"http://image.cheerway.fun/blog/20200819/Hled5Ew2Qisf.png?imageslim\" alt=\"mark\"></p>\n<h2 id=\"5-Linux用户与用户组管理\"><a href=\"#5-Linux用户与用户组管理\" class=\"headerlink\" title=\"5. Linux用户与用户组管理\"></a>5. Linux用户与用户组管理</h2><h3 id=\"Linux-用户管理\"><a href=\"#Linux-用户管理\" class=\"headerlink\" title=\"Linux 用户管理\"></a>Linux 用户管理</h3><p>Linux 系统是一个多用户多任务的分时操作系统，任何一个要使用系统资源的用户，都必须首先向系统管理员申请一个账号，然后以这个账号的身份进入系统。</p>\n<p>用户的账号一方面可以帮助系统管理员对使用系统的用户进行跟踪，并控制他们对系统资源的访问；另一方面也可以帮助用户组织文件，并为用户提供安全性保护。</p>\n<p><strong>Linux 用户管理相关命令:</strong></p>\n<ul>\n<li><code>useradd 选项 用户名</code>:添加用户账号</li>\n<li><code>userdel 选项 用户名</code>:删除用户帐号</li>\n<li><code>usermod 选项 用户名</code>:修改帐号</li>\n<li><code>passwd 用户名</code>:更改或创建用户的密码</li>\n<li><code>passwd -S 用户名</code> :显示用户账号密码信息</li>\n<li><code>passwd -d 用户名</code>: 清除用户密码</li>\n</ul>\n<p><code>useradd</code> 命令用于 Linux 中创建的新的系统用户。<code>useradd</code>可用来建立用户帐号。帐号建好之后，再用<code>passwd</code>设定帐号的密码．而可用<code>userdel</code>删除帐号。使用<code>useradd</code>指令所建立的帐号，实际上是保存在 <code>/etc/passwd</code>文本文件中。</p>\n<p><code>passwd</code>命令用于设置用户的认证信息，包括用户密码、密码过期时间等。系统管理者则能用它管理系统用户的密码。只有管理者可以指定用户名称，一般用户只能变更自己的密码。</p>\n<h3 id=\"Linux-系统用户组的管理\"><a href=\"#Linux-系统用户组的管理\" class=\"headerlink\" title=\"Linux 系统用户组的管理\"></a>Linux 系统用户组的管理</h3><p>每个用户都有一个用户组，系统可以对一个用户组中的所有用户进行集中管理。不同 Linux 系统对用户组的规定有所不同，如 Linux 下的用户属于与它同名的用户组，这个用户组在创建用户时同时创建。</p>\n<p>用户组的管理涉及用户组的添加、删除和修改。组的增加、删除和修改实际上就是对<code>/etc/group</code>文件的更新。</p>\n<p><strong>Linux 系统用户组的管理相关命令:</strong></p>\n<ul>\n<li><code>groupadd 选项 用户组</code> :增加一个新的用户组</li>\n<li><code>groupdel 用户组</code>:要删除一个已有的用户组</li>\n<li><code>groupmod 选项 用户组</code> : 修改用户组的属性</li>\n</ul>\n<h2 id=\"6-压缩与解压缩命令\"><a href=\"#6-压缩与解压缩命令\" class=\"headerlink\" title=\"6. 压缩与解压缩命令\"></a>6. 压缩与解压缩命令</h2><h3 id=\"打包并压缩文件\"><a href=\"#打包并压缩文件\" class=\"headerlink\" title=\"打包并压缩文件\"></a>打包并压缩文件</h3><p>Linux 中的打包文件一般是以.tar 结尾的，压缩的命令一般是以.gz 结尾的。而一般情况下打包和压缩是一起进行的，打包并压缩后的文件的后缀名一般.tar.gz。 命令：<code>tar -zcvf 打包压缩后的文件名 要打包压缩的文件</code> ，其中：</p>\n<ul>\n<li>z：调用 gzip 压缩命令进行压缩</li>\n<li>c：打包文件</li>\n<li>v：显示运行过程</li>\n<li>f：指定文件名</li>\n</ul>\n<p>比如：假如 test 目录下有三个文件分别是：aaa.txt bbb.txt ccc.txt，如果我们要打包 test 目录并指定压缩后的压缩包名称为 test.tar.gz 可以使用命令：**<code>tar -zcvf test.tar.gz aaa.txt bbb.txt ccc.txt</code> 或 <code>tar -zcvf test.tar.gz /test/</code>**</p>\n<h3 id=\"解压压缩包\"><a href=\"#解压压缩包\" class=\"headerlink\" title=\"解压压缩包\"></a>解压压缩包</h3><p>命令：<code>tar [-xvf] 压缩文件</code></p>\n<p>其中：x：代表解压</p>\n<p>示例：</p>\n<ul>\n<li>将 /test 下的 test.tar.gz 解压到当前目录下可以使用命令：**<code>tar -xvf test.tar.gz</code>**</li>\n<li>将 /test 下的 test.tar.gz 解压到根目录/usr 下:**<code>tar -xvf test.tar.gz -C /usr</code>**（- C 代表指定解压的位置）</li>\n</ul>\n<h2 id=\"7-grep指令和管道符号\"><a href=\"#7-grep指令和管道符号\" class=\"headerlink\" title=\"7. grep指令和管道符号 |\"></a>7. grep指令和管道符号 |</h2><p>grep：过滤查找</p>\n<p>管道符号：<code>|</code> 表示将前一个命令的处理结果输出传递后后面的命令处理</p>\n<p>语法：</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">grep [选项] 查找内容 源文件</code></pre>\n\n<p>选项说明：</p>\n<ul>\n<li>-n：显示匹配行及行号</li>\n<li>-i：忽略字母大小写</li>\n</ul>\n<p>示例：在b.txt文件中，查找yes所在行并显示行号</p>\n<p><img src=\"http://image.cheerway.fun/blog/20200819/Vp7ji16TSJAt.png?imageslim\" alt=\"mark\"></p>\n<h2 id=\"8-磁盘情况查询命令\"><a href=\"#8-磁盘情况查询命令\" class=\"headerlink\" title=\"8. 磁盘情况查询命令\"></a>8. 磁盘情况查询命令</h2><h3 id=\"查询磁盘整体使用情况\"><a href=\"#查询磁盘整体使用情况\" class=\"headerlink\" title=\"查询磁盘整体使用情况\"></a>查询磁盘整体使用情况</h3><p>语法：</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">df -lh</code></pre>\n\n<p><img src=\"http://image.cheerway.fun/blog/20200819/RYpbKbOsES0y.png?imageslim\" alt=\"mark\"></p>\n<h3 id=\"查看指定目录的磁盘占用情况\"><a href=\"#查看指定目录的磁盘占用情况\" class=\"headerlink\" title=\"查看指定目录的磁盘占用情况\"></a>查看指定目录的磁盘占用情况</h3><p>语法：</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">du -h &#x2F;目录</code></pre>\n\n<p>选项说明：</p>\n<ul>\n<li>-s：指定目录占用的大小汇总</li>\n<li>-h：带计量单位</li>\n<li>-a：含文件</li>\n<li>–max-depth=1 子目录深度</li>\n<li>-c：列出明细的同时，增加汇总值</li>\n</ul>\n<p>示例：查看/opt 目录的占用情况，深度为1</p>\n<p><img src=\"http://image.cheerway.fun/blog/20200819/3PdMEP68U4BL.png?imageslim\" alt=\"mark\"></p>\n<h3 id=\"一些实用指令\"><a href=\"#一些实用指令\" class=\"headerlink\" title=\"一些实用指令\"></a>一些实用指令</h3><ol>\n<li><p>统计/home文件夹下文件的个数</p>\n<p><img src=\"http://image.cheerway.fun/blog/20200819/02Pk0qGNjsYD.png?imageslim\" alt=\"mark\"></p>\n</li>\n<li><p>统计/home文件夹下文件夹的个数</p>\n<p><img src=\"http://image.cheerway.fun/blog/20200819/2mhSP0a62ue3.png?imageslim\" alt=\"mark\"></p>\n</li>\n<li><p>统计/home文件夹下的文件个数（或者文件夹个数），包含子文件夹里的</p>\n<p><img src=\"http://image.cheerway.fun/blog/20200819/V7bk1d61cb5m.png?imageslim\" alt=\"mark\"></p>\n</li>\n<li><p>以树状显示目录结构</p>\n<p>使用之前需要<code>yum install tree</code>才能使用<code>tree</code>命令！</p>\n</li>\n</ol>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>wc命令用于计算字数。利用wc指令我们可以计算文件的Byte数、字数、或是列数，若不指定文件名称、或是所给予的文件名为”-“，则wc指令会从标准输入设备读取数据。</p>\n<p>语法：<code>wc [-clw][--help][--version][文件...]</code> </p>\n<p>参数说明：</p>\n<ul>\n<li>-c或–bytes或–chars 只显示Bytes数。</li>\n<li>-l或–lines 只显示行数。</li>\n<li>-w或–words 只显示字数。</li>\n<li>–help 在线帮助。</li>\n<li>–version 显示版本信息。</li>\n</ul>\n<p>在默认的情况下，wc将计算指定文件的行数、字数，以及字节数。使用的命令为：</p>\n<p><code>wc filename</code></p>\n<p>结果是：3 92 598 testfile       # testfile文件的行数为3、单词数92、字节数598 </p></blockquote>\n<h2 id=\"9-进程管理\"><a href=\"#9-进程管理\" class=\"headerlink\" title=\"9. 进程管理\"></a>9. 进程管理</h2><h3 id=\"进程的基本介绍\"><a href=\"#进程的基本介绍\" class=\"headerlink\" title=\"进程的基本介绍\"></a>进程的基本介绍</h3><p><img src=\"http://image.cheerway.fun/blog/20200819/u4FDpwxsFlor.png?imageslim\" alt=\"mark\"></p>\n<h3 id=\"显示系统执行的进程\"><a href=\"#显示系统执行的进程\" class=\"headerlink\" title=\"显示系统执行的进程\"></a>显示系统执行的进程</h3><p>查看进程使用的命令是：<code>ps</code>，一般来说使用的参数是<code>ps -aux</code></p>\n<ul>\n<li>-a：显示所有的进程信息</li>\n<li>-u：以用户的格式显示进程信息</li>\n<li>-x：显示后台进程运行的参数</li>\n</ul>\n<p>示例：</p>\n<p><img src=\"http://image.cheerway.fun/blog/20200819/yMTNxFYFc1kO.png?imageslim\" alt=\"mark\"></p>\n<p><strong>参数详细说明：</strong></p>\n<p><img src=\"http://image.cheerway.fun/blog/20200819/2wcqg5etTivB.png?imageslim\" alt=\"mark\"></p>\n<p>示例：以全格式显示当前所有的进程，查看进程的父进程</p>\n<p><img src=\"http://image.cheerway.fun/blog/20200819/U0q9suqBj0rO.png?imageslim\" alt=\"mark\"></p>\n<p><strong>参数详细说明：</strong></p>\n<p><img src=\"http://image.cheerway.fun/blog/20200819/mquzEGsppKnv.png?imageslim\" alt=\"mark\"></p>\n<h3 id=\"终止进程kill和killall\"><a href=\"#终止进程kill和killall\" class=\"headerlink\" title=\"终止进程kill和killall\"></a>终止进程kill和killall</h3><p>语法：</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">kill [选项] 进程号 （通过进程号杀死进程）\nkillall 进程名称 (通过名称杀死进程，也支持通配符，这在系统因负载过大而变慢时很有用)</code></pre>\n\n<p>选项说明：</p>\n<ul>\n<li>-9：强迫进程立即停止</li>\n</ul>\n<h3 id=\"查看进程树pstree\"><a href=\"#查看进程树pstree\" class=\"headerlink\" title=\"查看进程树pstree\"></a>查看进程树pstree</h3><p>语法：</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">pstree [选项]</code></pre>\n\n<p>选项说明：</p>\n<ul>\n<li>-p：显示进程的PID</li>\n<li>-u：显示进程的所属用户</li>\n</ul>\n<p><img src=\"http://image.cheerway.fun/blog/20200819/IGiauxCptm21.png?imageslim\" alt=\"mark\"></p>\n<h3 id=\"动态监控进程\"><a href=\"#动态监控进程\" class=\"headerlink\" title=\"动态监控进程\"></a>动态监控进程</h3><h4 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h4><p>top与ps命令很相似。他们都是用来显示正在执行的进程。top与ps最大的不同之处在于top在执行一段时间内可以更新正在运行的进程</p>\n<h4 id=\"top指令\"><a href=\"#top指令\" class=\"headerlink\" title=\"top指令\"></a>top指令</h4><p>语法：</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">top [选项]</code></pre>\n\n<p>选项说明：</p>\n<ul>\n<li>-d 秒数：指定top指令每隔几秒更新，默认是3秒</li>\n<li>-i：使top不显示任何闲置或者僵尸jinc</li>\n<li>-p：通过指定监控进程的ID来监控特定的进程状态</li>\n</ul>\n<p>交互操作说明：</p>\n<ul>\n<li>P：以CPU使用率排序，默认就是此项</li>\n<li>M：以内存的使用率排序</li>\n<li>N：以PID排序</li>\n<li>q：退出指令</li>\n</ul>\n<p>示例：输入top命令</p>\n<p><img src=\"http://image.cheerway.fun/blog/20200819/0dgNNRMReaAV.png?imageslim\" alt=\"mark\"></p>\n<p>然后再输入”u“，再输入用户名，即可监控指定用户名的进程</p>\n<p><img src=\"C:\\Users\\23537\\AppData\\Roaming\\Typora\\typora-user-images\\image-20200819172823777.png\" alt=\"image-20200819172823777\"></p>\n<p>输入”k“，在输入要结束的进程ID，即可杀死进程</p>\n<p>示例：指定10秒更新一次</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">top -d 10</code></pre>\n\n<h3 id=\"查看网络情况netstat（重要！！！）\"><a href=\"#查看网络情况netstat（重要！！！）\" class=\"headerlink\" title=\"查看网络情况netstat（重要！！！）\"></a>查看网络情况netstat（重要！！！）</h3><p>语法：</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">netstat [-anp] </code></pre>\n\n<p>选项说明：</p>\n<ul>\n<li>-an：按一定的顺序排列</li>\n<li>-p：显示哪个进程在调用</li>\n</ul>\n<p><strong>示例：查看所有的网络连接</strong></p>\n<p><img src=\"http://image.cheerway.fun/blog/20200820/wbRv0hmy3b91.png?imageslim\" alt=\"mark\"></p>\n<p><strong>示例：查看所有的tcp连接</strong></p>\n<p><img src=\"http://image.cheerway.fun/blog/20200820/Qh9iATDrX6Kp.png?imageslim\" alt=\"mark\"></p>\n","feature":true,"text":"Linux学习笔记1. Linux简介简介Linux 内核最初只是由芬兰人林纳斯·托瓦兹（Linus Torvalds）在赫尔辛基大学上学时出于个人爱好而编写的。 Linux 是一套免费使用和自由传播的类 Unix 操作系统，是一个基于 POSIX 和 UNIX 的多用户、多任务、支持多线程和多 CPU 的操作系统。 Linux 能运行主要的 UNIX 工具软件、应用程序和网络协议。它支持 32 位和 64 位硬件。Linux 继承了 Unix 以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。 发行版Linux 的发行版说简单点就是将 Linux 内核与应用软件做一个打包。 目前市...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"Linux","slug":"Linux","count":1,"path":"api/categories/Linux.json"}],"tags":[{"name":"笔记","slug":"笔记","count":11,"path":"api/tags/笔记.json"},{"name":"Linux","slug":"Linux","count":1,"path":"api/tags/Linux.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0\"><span class=\"toc-text\">Linux学习笔记</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-Linux%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">1. Linux简介</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">简介</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%91%E8%A1%8C%E7%89%88\"><span class=\"toc-text\">发行版</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Linux%E5%92%8CWindows%E7%9A%84%E5%AF%B9%E6%AF%94\"><span class=\"toc-text\">Linux和Windows的对比</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-Linux%E7%9A%84%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">2. Linux的目录结构</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-Linux%E6%96%87%E4%BB%B6%E5%9F%BA%E6%9C%AC%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">3. Linux文件基本属性</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">基本属性</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9B%B4%E6%94%B9%E6%96%87%E4%BB%B6%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">更改文件属性</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-Linux%E6%96%87%E4%BB%B6%E4%B8%8E%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86\"><span class=\"toc-text\">4. Linux文件与目录管理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%84%E7%90%86%E6%96%87%E4%BB%B6%E7%9A%84%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4\"><span class=\"toc-text\">处理文件的常用指令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#ls%EF%BC%9A%E5%88%97%E5%87%BA%E7%9B%AE%E5%BD%95\"><span class=\"toc-text\">ls：列出目录</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#cd%EF%BC%9A%E5%88%87%E6%8D%A2%E7%9B%AE%E5%BD%95\"><span class=\"toc-text\">cd：切换目录</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#pwd-%EF%BC%9A%E6%98%BE%E7%A4%BA%E7%9B%AE%E5%89%8D%E6%89%80%E5%9C%A8%E7%9A%84%E7%9B%AE%E5%BD%95\"><span class=\"toc-text\">pwd ：显示目前所在的目录</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#mkdir%EF%BC%9A%E5%88%9B%E5%BB%BA%E7%9B%AE%E5%BD%95\"><span class=\"toc-text\">mkdir：创建目录</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#rmdir%EF%BC%9A%E5%88%A0%E9%99%A4%E7%A9%BA%E7%9A%84%E7%9B%AE%E5%BD%95\"><span class=\"toc-text\">rmdir：删除空的目录</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#cp%EF%BC%9A%E5%A4%8D%E5%88%B6%E6%96%87%E4%BB%B6%E6%88%96%E8%80%85%E7%9B%AE%E5%BD%95\"><span class=\"toc-text\">cp：复制文件或者目录</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#rm%EF%BC%9A%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6%E6%88%96%E8%80%85%E7%9B%AE%E5%BD%95\"><span class=\"toc-text\">rm：删除文件或者目录</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#mv%EF%BC%9A%E7%A7%BB%E5%8A%A8%E6%96%87%E4%BB%B6%E4%B8%8E%E7%9B%AE%E5%BD%95%E6%88%96%E8%80%85%E4%BF%AE%E6%94%B9%E5%90%8D%E7%A7%B0\"><span class=\"toc-text\">mv：移动文件与目录或者修改名称</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Linux%E6%96%87%E4%BB%B6%E5%86%85%E5%AE%B9%E6%9F%A5%E7%9C%8B\"><span class=\"toc-text\">Linux文件内容查看</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#cat%EF%BC%9A%E7%94%B1%E7%AC%AC%E4%B8%80%E8%A1%8C%E5%BC%80%E5%A7%8B%E6%98%BE%E7%A4%BA%E6%96%87%E4%BB%B6%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">cat：由第一行开始显示文件内容</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#tac%EF%BC%9A%E4%BB%8E%E6%9C%80%E5%90%8E%E4%B8%80%E8%A1%8C%E5%BC%80%E5%A7%8B%E6%9F%A5%E7%9C%8B\"><span class=\"toc-text\">tac：从最后一行开始查看</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#nl%EF%BC%9A%E6%98%BE%E7%A4%BA%E8%A1%8C%E5%8F%B7\"><span class=\"toc-text\">nl：显示行号</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#more%EF%BC%9A%E4%B8%80%E9%A1%B5%E4%B8%80%E9%A1%B5%E7%BF%BB%E5%8A%A8\"><span class=\"toc-text\">more：一页一页翻动</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#less%EF%BC%9A%E4%B8%80%E9%A1%B5%E4%B8%80%E9%A1%B5%E7%BF%BB%E5%8A%A8\"><span class=\"toc-text\">less：一页一页翻动</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#head%EF%BC%9A%E5%8F%96%E5%87%BA%E6%96%87%E4%BB%B6%E5%86%85%E5%AE%B9%E7%9A%84%E5%BC%80%E5%A4%B4%E9%83%A8%E5%88%86\"><span class=\"toc-text\">head：取出文件内容的开头部分</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#tail%EF%BC%9A%E5%8F%96%E5%87%BA%E6%96%87%E4%BB%B6%E6%9C%AB%E5%B0%BE%E7%9A%84%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">tail：取出文件末尾的内容</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#gt-%E6%8C%87%E4%BB%A4%E5%92%8C-gt-gt-%E6%8C%87%E4%BB%A4\"><span class=\"toc-text\">&gt;指令和&gt;&gt;指令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#echo%E6%8C%87%E4%BB%A4\"><span class=\"toc-text\">echo指令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#history%E6%8C%87%E4%BB%A4\"><span class=\"toc-text\">history指令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#find%E6%8C%87%E4%BB%A4\"><span class=\"toc-text\">find指令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#locate%E6%8C%87%E4%BB%A4\"><span class=\"toc-text\">locate指令</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-Linux%E7%94%A8%E6%88%B7%E4%B8%8E%E7%94%A8%E6%88%B7%E7%BB%84%E7%AE%A1%E7%90%86\"><span class=\"toc-text\">5. Linux用户与用户组管理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Linux-%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86\"><span class=\"toc-text\">Linux 用户管理</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Linux-%E7%B3%BB%E7%BB%9F%E7%94%A8%E6%88%B7%E7%BB%84%E7%9A%84%E7%AE%A1%E7%90%86\"><span class=\"toc-text\">Linux 系统用户组的管理</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-%E5%8E%8B%E7%BC%A9%E4%B8%8E%E8%A7%A3%E5%8E%8B%E7%BC%A9%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">6. 压缩与解压缩命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%89%93%E5%8C%85%E5%B9%B6%E5%8E%8B%E7%BC%A9%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">打包并压缩文件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E5%8E%8B%E5%8E%8B%E7%BC%A9%E5%8C%85\"><span class=\"toc-text\">解压压缩包</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#7-grep%E6%8C%87%E4%BB%A4%E5%92%8C%E7%AE%A1%E9%81%93%E7%AC%A6%E5%8F%B7\"><span class=\"toc-text\">7. grep指令和管道符号 |</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#8-%E7%A3%81%E7%9B%98%E6%83%85%E5%86%B5%E6%9F%A5%E8%AF%A2%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">8. 磁盘情况查询命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E8%AF%A2%E7%A3%81%E7%9B%98%E6%95%B4%E4%BD%93%E4%BD%BF%E7%94%A8%E6%83%85%E5%86%B5\"><span class=\"toc-text\">查询磁盘整体使用情况</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E7%9C%8B%E6%8C%87%E5%AE%9A%E7%9B%AE%E5%BD%95%E7%9A%84%E7%A3%81%E7%9B%98%E5%8D%A0%E7%94%A8%E6%83%85%E5%86%B5\"><span class=\"toc-text\">查看指定目录的磁盘占用情况</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E6%8C%87%E4%BB%A4\"><span class=\"toc-text\">一些实用指令</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#9-%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86\"><span class=\"toc-text\">9. 进程管理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">进程的基本介绍</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%98%BE%E7%A4%BA%E7%B3%BB%E7%BB%9F%E6%89%A7%E8%A1%8C%E7%9A%84%E8%BF%9B%E7%A8%8B\"><span class=\"toc-text\">显示系统执行的进程</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%88%E6%AD%A2%E8%BF%9B%E7%A8%8Bkill%E5%92%8Ckillall\"><span class=\"toc-text\">终止进程kill和killall</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E7%9C%8B%E8%BF%9B%E7%A8%8B%E6%A0%91pstree\"><span class=\"toc-text\">查看进程树pstree</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8A%A8%E6%80%81%E7%9B%91%E6%8E%A7%E8%BF%9B%E7%A8%8B\"><span class=\"toc-text\">动态监控进程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">介绍</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#top%E6%8C%87%E4%BB%A4\"><span class=\"toc-text\">top指令</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E7%9C%8B%E7%BD%91%E7%BB%9C%E6%83%85%E5%86%B5netstat%EF%BC%88%E9%87%8D%E8%A6%81%EF%BC%81%EF%BC%81%EF%BC%81%EF%BC%89\"><span class=\"toc-text\">查看网络情况netstat（重要！！！）</span></a></li></ol></li></ol></li></ol>","author":{"name":"Cao Wei","slug":"blog-author","avatar":"https://uploadfiles.nowcoder.com/images/20210823/575528905_1629692577639/4B05D951868901CDA3382C7B70543CD5","link":"/","description":"Code makes world better","socials":{"github":"https://github.com/wavecao","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"MySQL是怎样运行的(一)——初识MySQL","uid":"691d8376b81ffef877a8c1d1ab0e65db","slug":"MySQL是怎样运行的(一)——初始MySQL","date":"2020-08-22T02:54:00.000Z","updated":"2020-08-22T02:59:10.000Z","comments":true,"path":"api/articles/MySQL是怎样运行的(一)——初始MySQL.json","keywords":null,"cover":[],"text":" 本文所有知识点整理自掘金小册《MySQL 是怎样运行的：从根儿上理解 MySQL》，内容充实，难度适中，通俗易懂，有助于理解Mysql的运行原理，建议购买支持一下！（说真的，白嫖我整理的知识点根本没法领略到小册的魅力，也学不到东西） 初识Mysql基础细碎知识 启动MySQL客户端命令 mysql -h主机名 -u用户名 -p密码 参数名 含义 -h 表示服务器进程所在计算机的域名或者IP地址，如果服务器进程就运行在本机的话，可以省略这个参数，或者填localhost或者127.0.0.1。也可以写作 --host=主机名的形式。本地的话, 可以省略:smile: -u 表示用户名。也可以写...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"MySQL","slug":"MySQL","count":1,"path":"api/categories/MySQL.json"}],"tags":[{"name":"MySQL","slug":"MySQL","count":1,"path":"api/tags/MySQL.json"},{"name":"笔记","slug":"笔记","count":11,"path":"api/tags/笔记.json"}],"author":{"name":"Cao Wei","slug":"blog-author","avatar":"https://uploadfiles.nowcoder.com/images/20210823/575528905_1629692577639/4B05D951868901CDA3382C7B70543CD5","link":"/","description":"Code makes world better","socials":{"github":"https://github.com/wavecao","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"Volatile笔记","uid":"bba89471be59517c19dfa618326fae4f","slug":"Volatile笔记","date":"2020-08-19T03:14:00.000Z","updated":"2020-08-19T03:15:12.000Z","comments":true,"path":"api/articles/Volatile笔记.json","keywords":null,"cover":[],"text":"1. 概念volatile 是 Java 中的关键字，是一个变量修饰符，用来修饰会被不同线程访问和修改的变量。 2. 内存模型的3个特性2.1 可见性可见性是一种复杂的属性，因为可见性中的错误总是会违背我们的直觉。通常，我们无法确保执行读操作的线程能适时地看到其他线程写入的值，有时甚至是根本不可能的事情。为了确保多个线程之间对内存写入操作的可见性，必须使用同步机制。 可见性，是指线程之间的可见性，一个线程修改的状态对另一个线程是可见的。也就是一个线程修改的结果。另一个线程马上就能看到。 在 Java 中 volatile、synchronized 和 final 都可以实现可见性。 2.2 原...","link":"","photos":[],"count_time":{"symbolsCount":"6.8k","symbolsTime":"6 mins."},"categories":[{"name":"笔记","slug":"笔记","count":1,"path":"api/categories/笔记.json"}],"tags":[{"name":"笔记","slug":"笔记","count":11,"path":"api/tags/笔记.json"}],"author":{"name":"Cao Wei","slug":"blog-author","avatar":"https://uploadfiles.nowcoder.com/images/20210823/575528905_1629692577639/4B05D951868901CDA3382C7B70543CD5","link":"/","description":"Code makes world better","socials":{"github":"https://github.com/wavecao","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}