{"title":"MySQL是怎样运行的(一)——初识MySQL","uid":"691d8376b81ffef877a8c1d1ab0e65db","slug":"MySQL是怎样运行的(一)——初始MySQL","date":"2020-08-22T02:54:00.000Z","updated":"2020-08-22T02:59:10.000Z","comments":true,"path":"api/articles/MySQL是怎样运行的(一)——初始MySQL.json","keywords":null,"cover":[],"content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>本文所有知识点整理自掘金小册<a href=\"https://juejin.im/book/6844733769996304392\">《<strong>MySQL 是怎样运行的：从根儿上理解 MySQL</strong>》</a>，内容充实，难度适中，通俗易懂，有助于理解Mysql的运行原理，建议购买支持一下！（说真的，白嫖我整理的知识点根本没法领略到小册的魅力，也学不到东西）</p></blockquote>\n<h2 id=\"初识Mysql\"><a href=\"#初识Mysql\" class=\"headerlink\" title=\"初识Mysql\"></a>初识Mysql</h2><h3 id=\"基础细碎知识\"><a href=\"#基础细碎知识\" class=\"headerlink\" title=\"基础细碎知识\"></a>基础细碎知识</h3><ul>\n<li><p>启动MySQL客户端命令</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">mysql -h主机名  -u用户名 -p密码</code></pre>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">参数名</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>-h    </code></td>\n<td>表示服务器进程所在计算机的域名或者IP地址，如果服务器进程就运行在本机的话，可以省略这个参数，或者填<code>localhost</code>或者<code>127.0.0.1</code>。也可以写作 <code>--host=主机名</code>的形式。本地的话, 可以省略:smile:</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-u</code></td>\n<td>表示用户名。也可以写作 <code>--user=用户名</code>的形式。</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-p</code></td>\n<td>表示密码。也可以写作 <code>--password=密码</code>的形式。</td>\n</tr>\n</tbody></table>\n<p>举个栗子</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">mysql -uroot -p19981008</code></pre>\n\n<p><strong>另外, 各个参数的顺序没有硬性要求</strong></p>\n</li>\n<li><p>MySQL采用TCP作为服务器和客户端之间通信的网络通信协议; <code>MySQL</code>服务器会默认监听<code>3306</code>端口。</p>\n</li>\n<li><p>如果<code>3306</code>端口被占用或者想自定义数据库实例监听的端口号, 可以在启动服务器程序的命令行中指定, 比如: </p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">mysqld -P3307</code></pre></li>\n</ul>\n<h3 id=\"服务器处理客户端请求\"><a href=\"#服务器处理客户端请求\" class=\"headerlink\" title=\"服务器处理客户端请求\"></a>服务器处理客户端请求</h3><p>客户端向服务端发送增删改查请求后, 服务端的大致流程如下图: </p>\n<p><img src=\"http://image.cheerway.fun/blog/20200822/cQscpmdt0F93.png?imageslim\" alt=\"mark\"></p>\n<p>从图中我们可以看出，服务器程序处理来自客户端的查询请求大致需要经过三个部分，分别是<code>连接管理</code>、<code>解析与优化</code>、<code>存储引擎</code>。</p>\n<h4 id=\"连接管理\"><a href=\"#连接管理\" class=\"headerlink\" title=\"连接管理\"></a>连接管理</h4><p>MySQL使用连接池管理客户端的链接, 每次客户端断开连接后将线程缓存起来以便下次分配(我们可以自己限制线程的数量); 如果客户端与服务端不运行在同一台机器上, 还会使用<code>SSL</code>(安全套接字)的网络连接进行通信, 来保证数据的安全传输; </p>\n<h4 id=\"解析与优化\"><a href=\"#解析与优化\" class=\"headerlink\" title=\"解析与优化\"></a>解析与优化</h4><ul>\n<li><strong>查询缓存</strong><ul>\n<li>MySQL会把刚刚处理过的请求和结果缓存起来，如果有相同的请求过来，就直接从缓存中找出结果；缓存可以在客户端之间共享</li>\n<li>如果两个查询请求在任何字符上的不同（例如：空格、注释、大小写），都会导致缓存不会命中。另外，如果查询请求中包含某些系统函数、用户自定义变量和函数、一些系统表，如 mysql 、information_schema、 performance_schema 数据库中的表，那这个请求就不会被缓存。</li>\n<li>MySQL的缓存系统会监测涉及到的每张表，只要该表的结构或者数据被修改，如对该表使用了<code>INSERT</code>、 <code>UPDATE</code>、<code>DELETE</code>、<code>TRUNCATE TABLE</code>、<code>ALTER TABLE</code>、<code>DROP TABLE</code>或 <code>DROP DATABASE</code>语句，那使用该表的所有高速缓存查询都将变为无效并从高速缓存中删除！</li>\n<li>虽然缓存可以提高性能, 但缓存本身也会造成开销, 从MySQL 5.7.20开始，不推荐使用查询缓存，并在MySQL 8.0中删除。</li>\n</ul>\n</li>\n<li><strong>语法解析</strong><ul>\n<li>服务器对接收到的文本做分析, 首先判断是否有语法错误, 之后就从文本中获取到要查询的表以及各种查询条件进行查询;</li>\n</ul>\n</li>\n<li><strong>查询优化</strong><ul>\n<li>我们自己写的SQL语句往往比较菜, MySQL会对我们的语句做一些优化, 比如说外连接转化为内连接, 表达式简化, 子查询转为连接等等;</li>\n<li>可以使用<code>EXPLAIN</code>语句来查看某个语句的执行计划;</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"存储引擎\"><a href=\"#存储引擎\" class=\"headerlink\" title=\"存储引擎\"></a>存储引擎</h4><p>MySQL把数据的存储和提取操作都封装到了一个叫<code>存储引擎</code>的模块里; </p>\n<p>常见存储引擎:</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">存储引擎</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>ARCHIVE</code></td>\n<td align=\"center\">用于数据存档(行被插入后不能再修改)</td>\n</tr>\n<tr>\n<td align=\"center\"><code>BLACKHOLE</code></td>\n<td align=\"center\">丢弃写操作,读操作会返回空内容</td>\n</tr>\n<tr>\n<td align=\"center\"><code>CSV</code></td>\n<td align=\"center\">在存储数据时，以逗号分隔各个数据项</td>\n</tr>\n<tr>\n<td align=\"center\"><code>FEDERATED</code></td>\n<td align=\"center\">用来访问远程表</td>\n</tr>\n<tr>\n<td align=\"center\"><code>InnoDB</code></td>\n<td align=\"center\">具备外键支持功能的事务存储引擎，而且同时支持表级锁和行级锁</td>\n</tr>\n<tr>\n<td align=\"center\"><code>MEMORY</code></td>\n<td align=\"center\">置于内存的表</td>\n</tr>\n<tr>\n<td align=\"center\"><code>MERGE</code></td>\n<td align=\"center\">用来管理多个MyISAM表构成的表集合</td>\n</tr>\n<tr>\n<td align=\"center\"><code>MyISAM</code></td>\n<td align=\"center\">主要的非事务处理存储引擎</td>\n</tr>\n<tr>\n<td align=\"center\"><code>NDB</code></td>\n<td align=\"center\">MySQL集群专用存储引擎</td>\n</tr>\n</tbody></table>\n<h3 id=\"关于存储引擎的一些操作\"><a href=\"#关于存储引擎的一些操作\" class=\"headerlink\" title=\"关于存储引擎的一些操作\"></a>关于存储引擎的一些操作</h3><h4 id=\"查看当前使用的存储引擎\"><a href=\"#查看当前使用的存储引擎\" class=\"headerlink\" title=\"查看当前使用的存储引擎\"></a>查看当前使用的存储引擎</h4><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">show engines;</code></pre>\n\n<p><img src=\"http://image.cheerway.fun/blog/20200822/pRPuRUvfLufu.png?imageslim\" alt=\"mark\"></p>\n<p>其中的<code>Support</code>列表示该存储引擎是否可用，<code>DEFAULT</code>值代表是当前服务器程序的默认存储引擎。<code>Transactions</code>列代表该存储引擎是否支持事务处理。<code>XA</code>列代表着该存储引擎是否支持分布式事务。<code>Savepoints</code>代表着该存储引擎是否支持部分事务回滚。</p>\n<h4 id=\"设置表的存储引擎\"><a href=\"#设置表的存储引擎\" class=\"headerlink\" title=\"设置表的存储引擎\"></a>设置表的存储引擎</h4><p>可以为不同的表设置不同的存储引擎，也就是说不同的表可以有不同的物理存储结构，不同的提取和写入方式。</p>\n<h5 id=\"创建时就指定存储引擎\"><a href=\"#创建时就指定存储引擎\" class=\"headerlink\" title=\"创建时就指定存储引擎\"></a>创建时就指定存储引擎</h5><p>创建数据表时如果没有指定存储引擎，那就会使用默认的存储引擎<code>InnoDB</code>，如果想显式地指定存储引擎可以使用下面地语句：</p>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">CREATE TABLE 表名(\n    建表语句;\n) ENGINE &#x3D; 存储引擎名称;</code></pre>\n\n<p>比如我们想创建一个使用MyISAM引擎地表，可以这么写：</p>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">mysql&gt; CREATE TABLE engine_demo_table(\n    -&gt;     i int\n    -&gt; ) ENGINE &#x3D; MyISAM;\nQuery OK, 0 rows affected (0.02 sec)</code></pre>\n\n<h5 id=\"修改表的存储引擎\"><a href=\"#修改表的存储引擎\" class=\"headerlink\" title=\"修改表的存储引擎\"></a>修改表的存储引擎</h5><pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">ALTER TABLE 表名 ENGINE &#x3D; 存储引擎名称;</code></pre>\n\n","feature":true,"text":" 本文所有知识点整理自掘金小册《MySQL 是怎样运行的：从根儿上理解 MySQL》，内容充实，难度适中，通俗易懂，有助于理解Mysql的运行原理，建议购买支持一下！（说真的，白嫖我整理的知识点根本没法领略到小册的魅力，也学不到东西） 初识Mysql基础细碎知识 启动MySQL客户端命令 mysql -h主机名 -u用户名 -p密码 参数名 含义 -h 表示服务器进程所在计算机的域名或者IP地址，如果服务器进程就运行在本机的话，可以省略这个参数，或者填localhost或者127.0.0.1。也可以写作 --host=主机名的形式。本地的话, 可以省略:smile: -u 表示用户名。也可以写...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"MySQL","slug":"MySQL","count":1,"path":"api/categories/MySQL.json"}],"tags":[{"name":"笔记","slug":"笔记","count":11,"path":"api/tags/笔记.json"},{"name":"MySQL","slug":"MySQL","count":1,"path":"api/tags/MySQL.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%9D%E8%AF%86Mysql\"><span class=\"toc-text\">初识Mysql</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E7%A1%80%E7%BB%86%E7%A2%8E%E7%9F%A5%E8%AF%86\"><span class=\"toc-text\">基础细碎知识</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%A4%84%E7%90%86%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%AF%B7%E6%B1%82\"><span class=\"toc-text\">服务器处理客户端请求</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%9E%E6%8E%A5%E7%AE%A1%E7%90%86\"><span class=\"toc-text\">连接管理</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E6%9E%90%E4%B8%8E%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">解析与优化</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E\"><span class=\"toc-text\">存储引擎</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%B3%E4%BA%8E%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E%E7%9A%84%E4%B8%80%E4%BA%9B%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">关于存储引擎的一些操作</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E7%9C%8B%E5%BD%93%E5%89%8D%E4%BD%BF%E7%94%A8%E7%9A%84%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E\"><span class=\"toc-text\">查看当前使用的存储引擎</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E7%BD%AE%E8%A1%A8%E7%9A%84%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E\"><span class=\"toc-text\">设置表的存储引擎</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E6%97%B6%E5%B0%B1%E6%8C%87%E5%AE%9A%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E\"><span class=\"toc-text\">创建时就指定存储引擎</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9%E8%A1%A8%E7%9A%84%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E\"><span class=\"toc-text\">修改表的存储引擎</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"Cao Wei","slug":"blog-author","avatar":"https://uploadfiles.nowcoder.com/images/20210823/575528905_1629692577639/4B05D951868901CDA3382C7B70543CD5","link":"/","description":"Code makes world better","socials":{"github":"https://github.com/wavecao","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"Linux学习笔记——一篇入门Linux","uid":"81b01b0fe0649b3c1227863a4d704276","slug":"Linux学习笔记","date":"2020-08-20T01:47:00.000Z","updated":"2020-08-20T00:57:14.000Z","comments":true,"path":"api/articles/Linux学习笔记.json","keywords":null,"cover":"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1597895038826&di=423dbc0befbefd0d55195ee12e7ff13e&imgtype=0&src=http%3A%2F%2Fimg.cnitedu.cn%2Fuploads%2Fallimg%2F1910%2Fwsh1012002.jpg","text":"Linux学习笔记1. Linux简介简介Linux 内核最初只是由芬兰人林纳斯·托瓦兹（Linus Torvalds）在赫尔辛基大学上学时出于个人爱好而编写的。 Linux 是一套免费使用和自由传播的类 Unix 操作系统，是一个基于 POSIX 和 UNIX 的多用户、多任务、支持多线程和多 CPU 的操作系统。 Linux 能运行主要的 UNIX 工具软件、应用程序和网络协议。它支持 32 位和 64 位硬件。Linux 继承了 Unix 以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。 发行版Linux 的发行版说简单点就是将 Linux 内核与应用软件做一个打包。 目前市...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"Linux","slug":"Linux","count":1,"path":"api/categories/Linux.json"}],"tags":[{"name":"笔记","slug":"笔记","count":11,"path":"api/tags/笔记.json"},{"name":"Linux","slug":"Linux","count":1,"path":"api/tags/Linux.json"}],"author":{"name":"Cao Wei","slug":"blog-author","avatar":"https://uploadfiles.nowcoder.com/images/20210823/575528905_1629692577639/4B05D951868901CDA3382C7B70543CD5","link":"/","description":"Code makes world better","socials":{"github":"https://github.com/wavecao","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}