{"title":"【算法】Python判断数字是否是回文数","uid":"70047dfd85b8c57f6b791b919373d4bb","slug":"【算法】Python判断数字是否是回文数","date":"2019-12-12T03:56:00.000Z","updated":"2020-02-25T03:57:22.000Z","comments":true,"path":"api/articles/【算法】Python判断数字是否是回文数.json","keywords":null,"cover":null,"content":"<p><strong>回文数的定义：</strong>回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。</p>\n<span id=\"more\"></span>\n\n<p><strong>示例1：</strong></p>\n<p>输入：121</p>\n<p>输出：True</p>\n<p><strong>示例2：</strong></p>\n<p>输入：-121</p>\n<p>输出：False</p>\n<p>解释: 从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。</p>\n<p><strong>示例3：</strong></p>\n<p>输入: 10</p>\n<p>输出: false</p>\n<p>解释: 从右向左读, 为 01 。因此它不是一个回文数。</p>\n<p><strong>思路：</strong></p>\n<p>映入脑海的第一个想法是将数字转换为字符串，并检查字符串是否为回文。但是，这需要额外的非常量空间来创建问题描述中所不允许的字符串。</p>\n<p>第二个想法是将数字本身反转，但是这样做有一个风险，32位机器的int类型最大值为2147483647，反转后的数字可能超出范围造成溢出。</p>\n<p>按照第二个想法，为了避免数字反转可能导致的溢出问题，为什么不考虑只反转 int\\text{int}int 数字的一半？毕竟，如果该数字是回文，其后半部分反转后应该与原始数字的前半部分相同。</p>\n<p>例如，输入 1221，我们可以将数字“1221”的后半部分从“21”反转为“12”，并将其与前半部分“12”进行比较，因为二者相同，我们得知数字 1221 是回文。</p>\n<p><strong>算法：</strong></p>\n<p>首先我们要处理一些特殊情况，负数不可能是回文数，首先要禁止负数进入。</p>\n<p>然后再考虑如何反转数字，例如1221，首先1221%10就可以得到最后一位数字1，然后将1221/10得到122，再次122%10得到倒数第二位数字2，最后用1*10+2=12就得到了我们反转后的数字12，用12和原数字的前两位对比即可判断该数字是不是回文数。</p>\n<p>还存在一个问题：我们怎么知道自己反转了一半呢？</p>\n<p>我们将原始数字除以 10，然后给反转后的数字乘上 10，所以，当原始数字小于反转后的数字时，就意味着我们已经处理了一半位数的数字。</p>\n<p><strong>代码实现：</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">Python \n\nclass Solution(object):    \n\tdef isPalindrome(self, x):        \n\t\t&quot;&quot;&quot;        \n\t\t:type x: int        \n\t\t:rtype: bool        \n\t\t&quot;&quot;&quot;        \n\t\tif x&lt;0 or (x % 10 &#x3D;&#x3D; 0 and x !&#x3D; 0):            \t\t\treturn False        \n\t\ty&#x3D;0        \n\t\twhile(x&gt;y):            \n\t\t\ty&#x3D;x%10+y*10            \n\t\t\tx &#x2F;&#x3D; 10;        \n\t\treturn x&#x3D;&#x3D;y or x&#x3D;&#x3D;y&#x2F;10 </code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">Java \n    \nclass Solution &#123;    \n    public boolean isPalindrome(int x) &#123;        \n        if(x &lt; 0 || (x % 10 &#x3D;&#x3D; 0 &amp;&amp; x !&#x3D; 0))            \t\treturn false;        \n        int res &#x3D; 0;        \n        while(x &gt; res)&#123;            \n            res &#x3D; res * 10 + x % 10;            \n            x &#x2F;&#x3D; 10;        \n        &#125;        \n        return x &#x3D;&#x3D; res || x &#x3D;&#x3D; res &#x2F; 10;    \n    &#125; \n&#125; </code></pre>\n\n","text":"回文数的定义：回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。 示例1： 输入：121 输出：True 示例2： 输入：-121 输出：False 解释: 从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。 示例3： 输入: 10 ...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"算法","slug":"算法","count":2,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":3,"path":"api/tags/算法.json"}],"toc":"","author":{"name":"Cao Wei","slug":"blog-author","avatar":"https://uploadfiles.nowcoder.com/images/20210823/575528905_1629692577639/4B05D951868901CDA3382C7B70543CD5","link":"/","description":"Code makes world better","socials":{"github":"https://github.com/wavecao","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"大数据线性回归预测学生成绩","uid":"38a39c95773ebae43f0c0c8a85aadc04","slug":"大数据线性回归预测学生成绩","date":"2019-12-21T10:29:00.000Z","updated":"2020-07-01T01:54:32.000Z","comments":true,"path":"api/articles/大数据线性回归预测学生成绩.json","keywords":null,"cover":[],"text":"通过训练集训练和测试集测试来生成多个线性模型，从而预测学生成绩，本文所有代码请点击Github 1. 实验数据背景1.1 数据来源本项目的数据来源于kaggle.com，数据集的名称为Student Grade Prediction，Paulo Cortez，Minho大学，葡萄...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[{"name":"大数据","slug":"大数据","count":1,"path":"api/categories/大数据.json"},{"name":"算法","slug":"大数据/算法","count":1,"path":"api/categories/大数据/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":3,"path":"api/tags/算法.json"},{"name":"大数据","slug":"大数据","count":1,"path":"api/tags/大数据.json"}],"author":{"name":"Cao Wei","slug":"blog-author","avatar":"https://uploadfiles.nowcoder.com/images/20210823/575528905_1629692577639/4B05D951868901CDA3382C7B70543CD5","link":"/","description":"Code makes world better","socials":{"github":"https://github.com/wavecao","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{}}