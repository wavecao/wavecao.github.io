{"name":"SpringBoot","slug":"SpringBoot","count":3,"postlist":[{"title":"SpringBoot 配置文件详解（告别XML）","uid":"4c42910cd96b92369d87ca796bbcead8","slug":"SpringBoot 配置文件详解（告别XML）","date":"2020-02-26T09:57:00.000Z","updated":"2020-07-01T01:50:36.000Z","comments":true,"path":"api/articles/SpringBoot 配置文件详解（告别XML）.json","keywords":null,"cover":"http://image.cheerway.fun/blog/20200225/Wrc0uF8i5r3r.png?imageslim","text":"前言上篇笔记中提到SpringBoot简化Spring的开发是通过大量的默认配置，然而在开发中我们有时需要改变这些默认约定，所以要使用配置文件。 配置文件SpringBoot中的配置文件明必须是application，如：application.yml，application.properties，application.yaml 配置文件的作用: 帮我们修改自动配置的默认值; YAMLYAML 语言（发音 /ˈjæməl/ ）的设计目标，就是方便人类读写。它实质上是一种通用的数据串行化格式。 它的基本语法如下: 大小写敏感 使用缩进表示层级关系 缩进时不允许使用Tab键，只允许使用空格。 缩...","link":"","photos":[],"count_time":{"symbolsCount":"6.5k","symbolsTime":"6 mins."},"categories":[{"name":"SpringBoot","slug":"SpringBoot","count":3,"path":"api/categories/SpringBoot.json"}],"tags":[{"name":"笔记","slug":"笔记","count":11,"path":"api/tags/笔记.json"},{"name":"SpringBoot","slug":"SpringBoot","count":3,"path":"api/tags/SpringBoot.json"}],"author":{"name":"Cao Wei","slug":"blog-author","avatar":"https://uploadfiles.nowcoder.com/images/20210823/575528905_1629692577639/4B05D951868901CDA3382C7B70543CD5","link":"/","description":"Code makes world better","socials":{"github":"https://github.com/wavecao","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SpringBoot 日志全解","uid":"01d9c49bbeb2b94841aa8e6f58e445bb","slug":"SpringBoot日志全解","date":"2020-02-27T09:44:00.000Z","updated":"2020-07-01T01:51:16.000Z","comments":true,"path":"api/articles/SpringBoot日志全解.json","keywords":null,"cover":"http://image.cheerway.fun/blog/20200225/Wrc0uF8i5r3r.png?imageslim","text":"日志1、日志框架介绍主流的日志框架： JUL、JCL、Jboss-logging、logback、log4j、log4j2、slf4j…. 日志门面 （日志的抽象层） 日志实现 JCL（Jakarta Commons Logging） SLF4j（Simple Logging Facade for Java） jboss-logging Log4j JUL（java.util.logging） Log4j2 Logback 一般来说在开发中在左边选择一个抽象层，右边选择一个实现。 SpringBoot默认选用 SLF4j和logback，SpringBoot的底层是Spring，而Spring...","link":"","photos":[],"count_time":{"symbolsCount":"6.9k","symbolsTime":"6 mins."},"categories":[{"name":"SpringBoot","slug":"SpringBoot","count":3,"path":"api/categories/SpringBoot.json"}],"tags":[{"name":"笔记","slug":"笔记","count":11,"path":"api/tags/笔记.json"},{"name":"SpringBoot","slug":"SpringBoot","count":3,"path":"api/tags/SpringBoot.json"}],"author":{"name":"Cao Wei","slug":"blog-author","avatar":"https://uploadfiles.nowcoder.com/images/20210823/575528905_1629692577639/4B05D951868901CDA3382C7B70543CD5","link":"/","description":"Code makes world better","socials":{"github":"https://github.com/wavecao","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SpringBoot-HelloWorld","uid":"7039c293fbb0465a1b618eb4fc99fd7e","slug":"SpringBoot入门-HelloWorld","date":"2020-02-26T08:32:00.000Z","updated":"2020-07-01T01:52:16.000Z","comments":true,"path":"api/articles/SpringBoot入门-HelloWorld.json","keywords":null,"cover":"http://image.cheerway.fun/blog/20200225/Wrc0uF8i5r3r.png?imageslim","text":"SpringBoot-HelloWorld1. 为什么要用SpringBoot相信用过SSM框架的小伙伴都知道，在使用过程中我们必须配置大量的.xml文件来整合各个框架并对其参数进行配置，这项工作对于大型项目来说苦不堪言。 于是Pivotal 团队提供了全新的框架Spring Boot，其设计目的是用来简化新 Spring 应用的初始搭建以及开发过程。该框架采用“习惯优于配置”的方式开发，可以快速构建Spring应用。 SpringBoot 主要有以下优点： 快速创建独立运行的Spring项目以及与主流框架集成 使用嵌入式的Servlet容器，应用无需打成WAR包 starters自动依赖与版...","link":"","photos":[],"count_time":{"symbolsCount":"5.5k","symbolsTime":"5 mins."},"categories":[{"name":"SpringBoot","slug":"SpringBoot","count":3,"path":"api/categories/SpringBoot.json"}],"tags":[{"name":"笔记","slug":"笔记","count":11,"path":"api/tags/笔记.json"},{"name":"SpringBoot","slug":"SpringBoot","count":3,"path":"api/tags/SpringBoot.json"}],"author":{"name":"Cao Wei","slug":"blog-author","avatar":"https://uploadfiles.nowcoder.com/images/20210823/575528905_1629692577639/4B05D951868901CDA3382C7B70543CD5","link":"/","description":"Code makes world better","socials":{"github":"https://github.com/wavecao","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}